#!/bin/bash

## Before using this script keep in mind that you need a FQDN before continue

virtualhost="https://raw.githubusercontent.com/squadramunter/nextcloud_installer/master/nextcloud"

nextcloud_version="16.0.1"

php_version="7.3"

timezone="Europe/Amsterdam"

# Make sure only root can run our script
if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root" 1>&2
   exit 1
fi

trap '' 2
while true
do
  clear
  echo "================================================================================"
  echo "//                Nextcloud installer made by @squadramunter                  //"
  echo "================================================================================"
  echo "Enter 1 to install Nextcloud automatically: "
  echo "Enter 2 to get a Let's Encrypt certificate: "
  echo "Enter q to exit the menu q: "
  echo -e "\n"
  echo -e "Enter your selection \c"
  read answer
  case "$answer" in
1)

sudo apt-get update

sudo apt install -y nginx unzip curl

sudo systemctl stop nginx.service

sed -i '/server_names_hash_bucket_size 64;/c\server_names_hash_bucket_size 64;' /etc/nginx/nginx.conf

sleep 2

sudo systemctl start nginx.service

sleep 2

sudo systemctl enable nginx.service

sudo apt install -y mariadb-server mariadb-client

sudo mysql_secure_installation

sleep 2

sudo systemctl restart mariadb.service

sudo apt-get install -y software-properties-common

sudo add-apt-repository -y ppa:ondrej/php

sudo apt update

sudo apt install -y php$php_version-fpm php$php_version-mbstring php$php_version-xmlrpc php$php_version-soap php$php_version-apcu \
php$php_version-smbclient php$php_version-ldap php$php_version-redis php$php_version-gd php$php_version-xml php$php_version-intl php$php_version-json \
php$php_version-imagick php$php_version-mysql php$php_version-cli php$php_version-ldap php$php_version-zip php$php_version-curl

## Change PHP ini file

sed -i '/file_uploads/c\file_uploads=On' /etc/php/$php_version/fpm/php.ini
sed -i '/allow_url_fopen/c\allow_url_fopen=On' /etc/php/$php_version/fpm/php.ini
sed -i '/memory_limit/c\memory_limit=256M' /etc/php/$php_version/fpm/php.ini
sed -i '/upload_max_filesize/c\upload_max_filesize=100M' /etc/php/$php_version/fpm/php.ini
sed -i '/display_errors/c\display_errors=Off' /etc/php/$php_version/fpm/php.ini
sed -i '/cgi.fix_pathinfo/c\cgi.fix_pathinfo=0' /etc/php/$php_version/fpm/php.ini
sed -i "/date.timezone/c\date.timezone=${timezone}" /etc/php/$php_version/fpm/php.ini

## Create Nextcloud Database

# create database
read -p "Please enter a database name for Nextcloud: " -e NDATABASE

# create username
read -p "Please enter a username for Nextcloud: " -e NUSERNAME

# create password
read -p "Please enter a password for Nextcloud: " -s -e NPASSWORD

# If /root/.my.cnf exists then it won't ask for root password
if [ -f /root/.my.cnf ]; then

    mysql -e "CREATE DATABASE ${NDATABASE};"
    mysql -e "CREATE USER ${NUSERNAME}@localhost IDENTIFIED BY '${NPASSWORD}';"
    mysql -e "GRANT ALL PRIVILEGES ON ${NDATABASE}.* TO '${NUSERNAME}'@'localhost' IDENTIFIED BY '${NPASSWORD}' WITH GRANT OPTION;"
    mysql -e "FLUSH PRIVILEGES;"

# If /root/.my.cnf doesn't exist then it'll ask for root password
else
    read -p "Please enter root user MySQL password!: " -s -e rootpasswd
    mysql -uroot -p${rootpasswd} -e "CREATE DATABASE ${NDATABASE};"
    mysql -uroot -p${rootpasswd} -e "CREATE USER ${NUSERNAME}@localhost IDENTIFIED BY '${NPASSWORD}';"
    mysql -uroot -p${rootpasswd} -e "GRANT ALL PRIVILEGES ON ${NDATABASE}.* TO '${NUSERNAME}'@'localhost' IDENTIFIED BY '${NPASSWORD}' WITH GRANT OPTION;"
    mysql -uroot -p${rootpasswd} -e "FLUSH PRIVILEGES;"
fi

## Download Nextcloud

cd /tmp && wget https://download.nextcloud.com/server/releases/nextcloud-$nextcloud_version.zip -O /tmp/nextcloud-$nextcloud_version.zip
unzip /tmp/nextcloud-$nextcloud_version.zip -d /tmp

## Move nextcloud to www root

read -p "Enter web root for Nextcloud [/var/www/html]: " NROOT
NROOT=${NROOT:-/var/www/html}
echo $NROOT

sudo mv /tmp/nextcloud $NROOT

## Set the right permissions for nextcloud
sudo chown -R www-data:www-data $NROOT/nextcloud
sudo chmod -R 755 $NROOT/nextcloud

## Configure Nextcloud VirtualHost for nginx

# enter domainname FQDN for Nextcloud
read -p "Enter your Domain Name for Nextcloud: " NDOMAIN
echo "You have set $NDOMAIN as your Domain Name"
sleep 3

NVHOST="/etc/nginx/sites-available/nextcloud"

wget $virtualhost -O $NVHOST

sed -i "/	server unix:/var/run/php/php7.3-fpm.sock;/c\	server unix:/var/run/php/php${php_version}-fpm.sock;" $NVHOST

sed -i "/    server_name  domain.com;/c\    server_name  ${NDOMAIN};" $NVHOST

sed -i "/    server_name  www.domain.com;/c\    server_name  www.${NDOMAIN};" $NVHOST

sed -i "/    root /var/www/html/nextcloud/;/c\    root ${NROOT}/nextcloud/;" $NVHOST

## Enable Nextcloud VirtualHost
sudo ln -s /etc/nginx/sites-available/nextcloud /etc/nginx/sites-enabled/

sudo systemctl restart nginx.service

echo "Do you want to setup a Let's Encrypt Certificate?"
read -p "Would you like to proceed y/n? " -n 1 -r
echo

if [[ $REPLY =~ ^[Yy]$ ]]
then

  sed -i "/    # add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";/c\     add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;" $NVHOST

  sudo add-apt-repository -y ppa:certbot/certbot
  sudo apt install -y python-certbot-nginx
  sudo certbot --nginx -d $NDOMAIN -d www.$NDOMAIN

  sudo systemctl restart nginx

else
   echo "Thanks for using Nextcloud Auto Installer made by @SquadraMunter"
   sleep 5
fi

;;

2)

read -p "Enter your Domain Name for Let\'s Encrypt: " NDOMAIN
echo "You have set $NDOMAIN as your Domain Name"

sleep 3

NVHOST="/etc/nginx/sites-available/nextcloud"

sed -i "/    # add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";/c\     add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;" $NVHOST

sudo add-apt-repository -y ppa:certbot/certbot
sudo apt install -y python-certbot-nginx
sudo certbot --nginx -d $NDOMAIN -d www.$NDOMAIN

sudo systemctl restart nginx

fi
;;

q) exit ;;

  esac
  echo -e "Enter return to continue \c"
  read input
done
